# JMH version: 1.33
# VM version: JDK 1.8.0_292, OpenJDK 64-Bit Server VM, 25.292-b10
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.tsypanov.benchmark.CRHMBenchmark.instantiate

# Run progress: 0.00% complete, ETA 00:00:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1212.070 ns/op
# Warmup Iteration   2: 676.515 ns/op
# Warmup Iteration   3: 643.586 ns/op
# Warmup Iteration   4: 639.543 ns/op
# Warmup Iteration   5: 647.726 ns/op
Iteration   1: 646.422 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.tsypanov.benchmark.CRHMBenchmark.instantiate":
  646.422 ns/op

Secondary result "com.tsypanov.benchmark.CRHMBenchmark.instantiate:·asm":
PrintAssembly processed: 139885 total address lines.
Perf output processed (skipped 11.922 seconds):
 Column 1: cycles (911 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (696 bytes) 

             0x00007f6db122738e: mov     $0x2001833d,%r11d  ;   {metadata(&apos;java/util/concurrent/locks/ReentrantLock$NonfairSync&apos;)}
             0x00007f6db1227394: movabs  $0x0,%r14
             0x00007f6db122739e: lea     (%r14,%r11,8),%r14
             0x00007f6db12273a2: mov     $0x2001959f,%r11d  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$Segment&apos;)}
             0x00007f6db12273a8: shl     $0x3,%r11
             0x00007f6db12273ac: mov     $0x20000d06,%r9d  ;   {metadata(&apos;java/lang/ref/ReferenceQueue&apos;)}
             0x00007f6db12273b2: shl     $0x3,%r9
             0x00007f6db12273b6: mov     $0x200196b2,%ecx  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager&apos;)}
             0x00007f6db12273bb: movabs  $0x0,%rsi
             0x00007f6db12273c5: lea     (%rsi,%rcx,8),%rsi
  0.11%      0x00007f6db12273c9: xor     %ebp,%ebp
         ╭   0x00007f6db12273cb: jmpq    0x7f6db122754d
         │   0x00007f6db12273d0: mov     $0x1,%edx         ;*ishl
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@30 (line 486)
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
         │   0x00007f6db12273d5: cmp     $0x40000,%edx
         │   0x00007f6db12273db: jnbe    0x7f6db1227aa5
         │   0x00007f6db12273e1: movsxd  %edx,%rcx         ;*anewarray
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::createReferenceArray@1 (line 656)
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@40 (line 487)
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
  0.66%  │   0x00007f6db12273e4: mov     %edx,0x10(%rbx)   ;*putfield initialSize
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@31 (line 486)
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
         │   0x00007f6db12273e7: cmp     $0x40000,%edx
         │   0x00007f6db12273ed: jnbe    0x7f6db1227a27
         │   0x00007f6db12273f3: mov     %rbx,%rbp
         │   0x00007f6db12273f6: mov     %rsi,0x38(%rsp)
  0.66%  │   0x00007f6db12273fb: mov     %r9,0x30(%rsp)
         │   0x00007f6db1227400: mov     %r11,0x20(%rsp)
         │   0x00007f6db1227405: mov     %r14,0x18(%rsp)
         │   0x00007f6db122740a: mov     %edi,(%rsp)
  0.33%  │   0x00007f6db122740d: mov     %r8d,0x8(%rsp)
         │   0x00007f6db1227412: mov     0x60(%r15),%r10
         │   0x00007f6db1227416: shl     $0x2,%rcx
         │   0x00007f6db122741a: add     $0x17,%rcx
  0.77%  │   0x00007f6db122741e: mov     %rcx,%r11
         │   0x00007f6db1227421: and     $0xfffffffffffffff8,%r11
         │   0x00007f6db1227425: mov     %r10,%r8
         │   0x00007f6db1227428: add     %r11,%r8
  0.33%  │   0x00007f6db122742b: cmp     0x70(%r15),%r8
         │   0x00007f6db122742f: jnb     0x7f6db1227a46
         │   0x00007f6db1227435: mov     %r8,0x60(%r15)
         │   0x00007f6db1227439: prefetchnta 0x100(%r8)
         │   0x00007f6db1227441: movq    $0x1,(%r10)
  0.44%  │   0x00007f6db1227448: prefetchnta 0x140(%r8)
         │   0x00007f6db1227450: movl    $0x20019730,0x8(%r10)  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$Reference&apos;[])}
         │   0x00007f6db1227458: mov     %edx,0xc(%r10)
         │   0x00007f6db122745c: prefetchnta 0x180(%r8)
  0.22%  │   0x00007f6db1227464: mov     %r10,%rdi
         │   0x00007f6db1227467: add     $0x10,%rdi
         │   0x00007f6db122746b: shr     $0x3,%rcx
         │   0x00007f6db122746f: add     $0xfffffffffffffffe,%rcx
  0.77%  │   0x00007f6db1227473: xor     %rax,%rax
         │   0x00007f6db1227476: shl     $0x3,%rcx
         │   0x00007f6db122747a: rep stosb (%rdi)
  9.22%  │   0x00007f6db122747d: mov     %r10,%r11
  0.33%  │   0x00007f6db1227480: mov     %rbp,%r8
         │   0x00007f6db1227483: mov     %r11d,0x20(%rbp)
  0.11%  │   0x00007f6db1227487: mov     %rbp,%r10
         │   0x00007f6db122748a: shr     $0x9,%r10
         │   0x00007f6db122748e: movabs  $0x7f6dc6fb7000,%r11
         │   0x00007f6db1227498: mov     %r12l,(%r11,%r10)
  1.21%  │   0x00007f6db122749c: lock addl $0x0,(%rsp)     ;*putfield references
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@43 (line 487)
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
 10.21%  │   0x00007f6db12274a1: mov     0x20(%rbp),%r10d  ;*getfield references
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@48 (line 488)
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
         │   0x00007f6db12274a5: mov     0xc(%r10),%r11d   ;*arraylength
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@51 (line 488)
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
         │                                                 ; implicit exception: dispatches to 0x00007f6db1227c01
         │   0x00007f6db12274a9: vcvtsi2ssl %r11d,%xmm1,%xmm1
  0.55%  │   0x00007f6db12274ae: mov     0x28(%rsp),%r10
         │   0x00007f6db12274b3: vmulss  0x14(%r10),%xmm1,%xmm0
         │   0x00007f6db12274b9: vcvttss2si %xmm0,%r10d
  0.22%  │   0x00007f6db12274bd: cmp     $0x80000000,%r10d
         │╭  0x00007f6db12274c4: jne     0x7f6db12274d6
         ││  0x00007f6db12274c6: sub     $0x8,%rsp
         ││  0x00007f6db12274ca: vmovss  %xmm0,(%rsp)
         ││  0x00007f6db12274cf: callq   0x7f6db10520a0    ;   {runtime_call}
         ││  0x00007f6db12274d4: pop     %r10
  0.11%  │↘  0x00007f6db12274d6: mov     %r10d,0x18(%rbp)  ;*synchronization entry
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@-1 (line 171)
         │   0x00007f6db12274da: mov     0x58(%rsp),%r11
  0.77%  │   0x00007f6db12274df: mov     0xc(%r11),%r10d   ; implicit exception: dispatches to 0x00007f6db1227c11
         │   0x00007f6db12274e3: mov     0x90(%rsp),%ebp
         │   0x00007f6db12274ea: cmp     %r10d,%ebp
         │   0x00007f6db12274ed: jnb     0x7f6db1227aad
         │   0x00007f6db12274f3: lea     0x10(%r11,%rbp,4),%r9  ;*aastore
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@144 (line 184)
  0.44%  │   0x00007f6db12274f8: mov     0x28(%rsp),%r10
         │   0x00007f6db12274fd: mov     0x1c(%r10),%r11d  ;*getfield segments
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@121 (line 183)
         │   0x00007f6db1227501: mov     %r9,%r10
         │   0x00007f6db1227504: incl    %ebp              ;*iinc
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@145 (line 183)
  0.77%  │   0x00007f6db1227506: shr     $0x9,%r10
         │   0x00007f6db122750a: movabs  $0x7f6dc6fb7000,%rcx
         │   0x00007f6db1227514: mov     %r12l,(%rcx,%r10)
         │   0x00007f6db1227518: mov     %r8d,(%r9)        ; OopMap{r11=NarrowOop [0]=NarrowOop [40]=Oop off=859}
         │                                                 ;*goto
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@148 (line 183)
  0.33%  │   0x00007f6db122751b: test    %eax,0x181a4adf(%rip)  ;*goto
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@148 (line 183)
         │                                                 ;   {poll}
         │   0x00007f6db1227521: mov     0xc(%r11),%r10d   ; implicit exception: dispatches to 0x00007f6db1227c2d
         │   0x00007f6db1227525: cmp     %r10d,%ebp
         │   0x00007f6db1227528: jnl     0x7f6db1227753    ;*if_icmpge
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@125 (line 183)
         │   0x00007f6db122752e: mov     %r11,%r13         ;*getfield segments
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@121 (line 183)
  0.22%  │   0x00007f6db1227531: mov     0x8(%rsp),%r8d
         │   0x00007f6db1227536: mov     (%rsp),%edi
  3.07%  │   0x00007f6db1227539: mov     0x18(%rsp),%r14
  0.11%  │   0x00007f6db122753e: mov     0x20(%rsp),%r11
         │   0x00007f6db1227543: mov     0x30(%rsp),%r9
         │   0x00007f6db1227548: mov     0x38(%rsp),%rsi   ;*aload_0
         │                                                 ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@128 (line 184)
  0.33%  ↘   0x00007f6db122754d: mov     0x60(%r15),%rbx
             0x00007f6db1227551: mov     %rbx,%r10
  0.22%      0x00007f6db1227554: add     $0x28,%r10
             0x00007f6db1227558: cmp     0x70(%r15),%r10
             0x00007f6db122755c: jnb     0x7f6db1227762
  0.44%      0x00007f6db1227562: mov     %r10,0x60(%r15)
             0x00007f6db1227566: prefetchnta 0x100(%r10)
             0x00007f6db122756e: mov     0xa8(%r11),%r10
             0x00007f6db1227575: mov     %r10,(%rbx)
  0.33%      0x00007f6db1227578: movl    $0x2001959f,0x8(%rbx)  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$Segment&apos;)}
             0x00007f6db122757f: mov     %r12d,0xc(%rbx)
  0.22%      0x00007f6db1227583: mov     %r12,0x10(%rbx)
             0x00007f6db1227587: mov     %r12,0x18(%rbx)
  0.33%      0x00007f6db122758b: mov     %r12d,0x20(%rbx)
             0x00007f6db122758f: mov     %edi,0x24(%rbx)   ;*new  ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@134 (line 184)
             0x00007f6db1227592: mov     0x60(%r15),%rax
             0x00007f6db1227596: mov     %rax,%r10
  0.66%      0x00007f6db1227599: add     $0x20,%r10
             0x00007f6db122759d: cmp     0x70(%r15),%r10
             0x00007f6db12275a1: jnb     0x7f6db12277e8
             0x00007f6db12275a7: mov     %r10,0x60(%r15)
             0x00007f6db12275ab: prefetchnta 0x100(%r10)
  0.88%      0x00007f6db12275b3: mov     0xa8(%r14),%r10
             0x00007f6db12275ba: mov     %r10,(%rax)
  0.11%      0x00007f6db12275bd: movl    $0x2001833d,0x8(%rax)  ;   {metadata(&apos;java/util/concurrent/locks/ReentrantLock$NonfairSync&apos;)}
  0.11%      0x00007f6db12275c4: mov     %r12d,0xc(%rax)
  0.44%      0x00007f6db12275c8: mov     %r12,0x10(%rax)
             0x00007f6db12275cc: mov     %r12,0x18(%rax)   ;*new  ; - java.util.concurrent.locks.ReentrantLock::&lt;init&gt;@5 (line 257)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@6 (line 484)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
             0x00007f6db12275d0: mov     %rbx,%rcx
             0x00007f6db12275d3: mov     %rax,%r10
  0.44%      0x00007f6db12275d6: mov     %r10d,0xc(%rbx)
  0.11%      0x00007f6db12275da: shr     $0x9,%rcx
             0x00007f6db12275de: movabs  $0x7f6dc6fb7000,%r10
             0x00007f6db12275e8: mov     %r12l,(%r10,%rcx)
  0.33%      0x00007f6db12275ec: mov     %r12d,0x14(%rbx)
  0.11%      0x00007f6db12275f0: lock addl $0x0,(%rsp)     ;*putfield count
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@11 (line 476)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
 16.14%      0x00007f6db12275f5: mov     0x60(%r15),%rdx
  0.11%      0x00007f6db12275f9: mov     %rdx,%r10
             0x00007f6db12275fc: add     $0x18,%r10
  0.33%      0x00007f6db1227600: cmp     0x70(%r15),%r10
             0x00007f6db1227604: jnb     0x7f6db1227876
             0x00007f6db122760a: mov     %r10,0x60(%r15)
             0x00007f6db122760e: prefetchnta 0x100(%r10)
             0x00007f6db1227616: mov     0xa8(%rsi),%r10
  0.22%      0x00007f6db122761d: mov     %r10,(%rdx)
             0x00007f6db1227620: movl    $0x200196b2,0x8(%rdx)  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager&apos;)}
             0x00007f6db1227627: mov     %r12d,0xc(%rdx)
             0x00007f6db122762b: mov     %r12d,0x14(%rdx)
  0.22%      0x00007f6db122762f: mov     %r13,0x58(%rsp)
             0x00007f6db1227634: mov     %ebp,0x90(%rsp)
             0x00007f6db122763b: mov     %edi,0x10(%rdx)   ;*new  ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@0 (line 207)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
             0x00007f6db122763e: mov     0x60(%r15),%rbp
  0.88%      0x00007f6db1227642: mov     %rbp,%r10
             0x00007f6db1227645: add     $0x20,%r10
             0x00007f6db1227649: cmp     0x70(%r15),%r10
             0x00007f6db122764d: jnb     0x7f6db1227907
             0x00007f6db1227653: mov     %r10,0x60(%r15)
  0.88%      0x00007f6db1227657: prefetchnta 0x100(%r10)
             0x00007f6db122765f: mov     0xa8(%r9),%r10
             0x00007f6db1227666: mov     %r10,0x0(%rbp)
             0x00007f6db122766a: movl    $0x20000d06,0x8(%rbp)  ;   {metadata(&apos;java/lang/ref/ReferenceQueue&apos;)}
  0.33%      0x00007f6db1227671: mov     %r12d,0xc(%rbp)
             0x00007f6db1227675: mov     %r12,0x10(%rbp)
             0x00007f6db1227679: mov     %r12,0x18(%rbp)   ;*new  ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@10 (line 984)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
             0x00007f6db122767d: mov     0x60(%r15),%rax
  1.21%      0x00007f6db1227681: mov     %rax,%r10
             0x00007f6db1227684: add     $0x10,%r10
             0x00007f6db1227688: cmp     0x70(%r15),%r10
             0x00007f6db122768c: jnb     0x7f6db122799d
             0x00007f6db1227692: mov     %r10,0x60(%r15)
             0x00007f6db1227696: prefetchnta 0x100(%r10)
             0x00007f6db122769e: mov     0x10(%rsp),%r10
             0x00007f6db12276a3: mov     0xa8(%r10),%r10
             0x00007f6db12276aa: mov     %r10,(%rax)
  0.99%      0x00007f6db12276ad: movl    $0x200034f1,0x8(%rax)  ;   {metadata(&apos;java/lang/ref/ReferenceQueue$Lock&apos;)}
             0x00007f6db12276b4: mov     %r12d,0xc(%rax)   ;*new  ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@5 (line 55)
....................................................................................................
 57.30%  <total for region 1>

....[Hottest Region 2]..............................................................................
C2, level 4, org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (107 bytes) 

           0x00007f6db122767d: mov     0x60(%r15),%rax
  1.21%    0x00007f6db1227681: mov     %rax,%r10
           0x00007f6db1227684: add     $0x10,%r10
           0x00007f6db1227688: cmp     0x70(%r15),%r10
           0x00007f6db122768c: jnb     0x7f6db122799d
           0x00007f6db1227692: mov     %r10,0x60(%r15)
           0x00007f6db1227696: prefetchnta 0x100(%r10)
           0x00007f6db122769e: mov     0x10(%rsp),%r10
           0x00007f6db12276a3: mov     0xa8(%r10),%r10
           0x00007f6db12276aa: mov     %r10,(%rax)
  0.99%    0x00007f6db12276ad: movl    $0x200034f1,0x8(%rax)  ;   {metadata(&apos;java/lang/ref/ReferenceQueue$Lock&apos;)}
           0x00007f6db12276b4: mov     %r12d,0xc(%rax)   ;*new  ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@5 (line 55)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
           0x00007f6db12276b8: mov     %rbp,%r10         ;*putfield queue
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@17 (line 984)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
           0x00007f6db12276bb: mov     %rax,%rcx
  0.55%    0x00007f6db12276be: mov     %ecx,0xc(%rbp)    ;*putfield lock
                                                         ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@13 (line 55)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
           0x00007f6db12276c1: mov     %rbp,%rax
           0x00007f6db12276c4: mov     %rdx,%rcx         ;*putfield referenceManager
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@19 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
           0x00007f6db12276c7: shr     $0x9,%rax
  0.55%    0x00007f6db12276cb: movabs  $0x7f6dc6fb7000,%r13
           0x00007f6db12276d5: mov     %r12l,0x0(%r13,%rax)
           0x00007f6db12276da: mov     %r12d,0x18(%rbp)
           0x00007f6db12276de: lock addl $0x0,(%rsp)     ;*putfield head
                                                         ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@18 (line 56)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
 14.93%    0x00007f6db12276e3: mov     %r10d,0xc(%rdx)   ;*putfield queue
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@17 (line 984)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
  0.11%    0x00007f6db12276e7: mov     %r12,0x10(%rbp)   ;*putfield queueLength
                                                         ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@23 (line 57)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
           0x00007f6db12276eb: mov     %rdx,%r10
  0.66%    0x00007f6db12276ee: shr     $0x9,%r10
           0x00007f6db12276f2: movabs  $0x7f6dc6fb7000,%rdx
           0x00007f6db12276fc: mov     %r12l,(%rdx,%r10)  ;*synchronization entry
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@-1 (line 207)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
           0x00007f6db1227700: mov     %ecx,0x1c(%rbx)
  0.88%    0x00007f6db1227703: mov     %rbx,%r10
           0x00007f6db1227706: shr     $0x9,%r10
           0x00007f6db122770a: movabs  $0x7f6dc6fb7000,%rcx
           0x00007f6db1227714: mov     %r12l,(%rcx,%r10)  ;*putfield referenceManager
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@19 (line 485)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
  0.22%    0x00007f6db1227718: cmp     $0x1,%r8d
           0x00007f6db122771c: jle     0x7f6db12273d0    ;*goto
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::calculateShift@21 (line 437)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@27 (line 486)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
           0x00007f6db1227722: mov     $0x1,%r10d
           0x00007f6db1227728: xor     %ecx,%ecx         ;*iload_3
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap::calculateShift@9 (line 435)
                                                         ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@27 (line 486)
....................................................................................................
 18.88%  <total for region 2>

....[Hottest Regions]...............................................................................
 57.30%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (696 bytes) 
 18.88%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (107 bytes) 
  1.98%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  1.43%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (21 bytes) 
  1.32%   [kernel.kallsyms]  syscall_exit_to_user_mode (0 bytes) 
  0.88%   [kernel.kallsyms]  zap_pte_range.isra.0 (0 bytes) 
  0.77%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (0 bytes) 
  0.77%        libc-2.31.so  malloc (0 bytes) 
  0.66%    libfcml.so.0.0.0  fcml_fn_dt_dts_tree_element_free (21 bytes) 
  0.44%           libjvm.so  SpinPause (7 bytes) 
  0.44%        libc-2.31.so  unlink_chunk.isra.0 (6 bytes) 
  0.44%        libc-2.31.so  malloc (0 bytes) 
  0.33%   [kernel.kallsyms]  free_pcppages_bulk (16 bytes) 
  0.33%   [kernel.kallsyms]  entry_SYSCALL_64 (19 bytes) 
  0.33%        libc-2.31.so  _int_free (0 bytes) 
  0.33%        libc-2.31.so  _int_malloc (41 bytes) 
  0.22%   [kernel.kallsyms]  enqueue_task_fair (0 bytes) 
  0.22%   [kernel.kallsyms]  psi_group_change (0 bytes) 
  0.22%   [kernel.kallsyms]  rcu_read_unlock_strict (0 bytes) 
  0.22%   [kernel.kallsyms]  release_pages (0 bytes) 
 12.40%  <...other 105 warm regions...>
....................................................................................................
 99.89%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 79.03%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 
  1.98%   [kernel.kallsyms]  native_write_msr 
  1.43%        libc-2.31.so  malloc 
  1.43%        libc-2.31.so  _int_malloc 
  1.32%   [kernel.kallsyms]  syscall_exit_to_user_mode 
  0.99%   [kernel.kallsyms]  zap_pte_range.isra.0 
  0.66%    libfcml.so.0.0.0  fcml_fn_dt_dts_tree_element_free 
  0.66%        libc-2.31.so  malloc_consolidate 
  0.44%   [kernel.kallsyms]  free_pcppages_bulk 
  0.44%        libc-2.31.so  _int_free 
  0.44%        libc-2.31.so  unlink_chunk.isra.0 
  0.44%           libjvm.so  SpinPause 
  0.44%   [kernel.kallsyms]  release_pages 
  0.33%   [kernel.kallsyms]  free_unref_page_commit 
  0.33%   [kernel.kallsyms]  psi_group_change 
  0.33%         C2, level 4  com.tsypanov.benchmark.jmh_generated.CRHMBenchmark_instantiate_jmhTest::instantiate_avgt_jmhStub, version 559 
  0.33%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.22%        libc-2.31.so  __strlen_avx2 
  0.22%   [kernel.kallsyms]  update_load_avg 
  0.22%   [kernel.kallsyms]  __mod_node_page_state 
  8.23%  <...other 68 warm methods...>
....................................................................................................
 99.89%  <totals>

....[Distribution by Source]........................................................................
 79.36%         C2, level 4
 10.43%   [kernel.kallsyms]
  5.38%        libc-2.31.so
  3.18%           libjvm.so
  1.43%    libfcml.so.0.0.0
  0.11%              kvm.ko
....................................................................................................
 99.89%  <totals>

WARNING: The perf event count is suspiciously low (911). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.


# Run complete. Total time: 00:00:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       Mode  Cnt    Score   Error  Units
CRHMBenchmark.instantiate       avgt       646.422          ns/op
CRHMBenchmark.instantiate:·asm  avgt           NaN            ---
