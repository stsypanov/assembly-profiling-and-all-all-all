# JMH version: 1.33
# VM version: JDK 1.8.0_292, OpenJDK 64-Bit Server VM, 25.292-b10
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.tsypanov.benchmark.CRHMBenchmark.instantiate

# Run progress: 0.00% complete, ETA 00:00:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1209.684 ns/op
# Warmup Iteration   2: 677.691 ns/op
# Warmup Iteration   3: 637.445 ns/op
# Warmup Iteration   4: 647.267 ns/op
# Warmup Iteration   5: 648.629 ns/op
Iteration   1: 642.351 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.tsypanov.benchmark.CRHMBenchmark.instantiate":
  642.351 ns/op

Secondary result "com.tsypanov.benchmark.CRHMBenchmark.instantiate:·asm":
PrintAssembly processed: 140917 total address lines.
Perf output processed (skipped 12.026 seconds):
 Column 1: cycles (863 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (820 bytes) 

             0x00007ff4a122384b: jmpq    0x7ff4a12239cd
          ↗  0x00007ff4a1223850: mov     $0x1,%edx         ;*ishl
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@30 (line 486)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223855: cmp     $0x40000,%edx
          │  0x00007ff4a122385b: jnbe    0x7ff4a1223f25
          │  0x00007ff4a1223861: movsxd  %edx,%rcx         ;*anewarray
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::createReferenceArray@1 (line 656)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@40 (line 487)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
  0.58%   │  0x00007ff4a1223864: mov     %edx,0x10(%rbx)   ;*putfield initialSize
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@31 (line 486)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223867: cmp     $0x40000,%edx
          │  0x00007ff4a122386d: jnbe    0x7ff4a1223ea7
          │  0x00007ff4a1223873: mov     %rbx,%rbp
          │  0x00007ff4a1223876: mov     %rsi,0x38(%rsp)
  0.93%   │  0x00007ff4a122387b: mov     %r9,0x30(%rsp)
          │  0x00007ff4a1223880: mov     %r11,0x20(%rsp)
          │  0x00007ff4a1223885: mov     %r14,0x18(%rsp)
          │  0x00007ff4a122388a: mov     %edi,(%rsp)
  0.35%   │  0x00007ff4a122388d: mov     %r8d,0x8(%rsp)
          │  0x00007ff4a1223892: mov     0x60(%r15),%r10
          │  0x00007ff4a1223896: shl     $0x2,%rcx
          │  0x00007ff4a122389a: add     $0x17,%rcx
  0.35%   │  0x00007ff4a122389e: mov     %rcx,%r11
          │  0x00007ff4a12238a1: and     $0xfffffffffffffff8,%r11
          │  0x00007ff4a12238a5: mov     %r10,%r8
          │  0x00007ff4a12238a8: add     %r11,%r8
  0.70%   │  0x00007ff4a12238ab: cmp     0x70(%r15),%r8
          │  0x00007ff4a12238af: jnb     0x7ff4a1223ec6
          │  0x00007ff4a12238b5: mov     %r8,0x60(%r15)
          │  0x00007ff4a12238b9: prefetchnta 0x100(%r8)
  0.35%   │  0x00007ff4a12238c1: movq    $0x1,(%r10)
  0.46%   │  0x00007ff4a12238c8: prefetchnta 0x140(%r8)
          │  0x00007ff4a12238d0: movl    $0x20019730,0x8(%r10)  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$Reference&apos;[])}
          │  0x00007ff4a12238d8: mov     %edx,0xc(%r10)
          │  0x00007ff4a12238dc: prefetchnta 0x180(%r8)
  0.46%   │  0x00007ff4a12238e4: mov     %r10,%rdi
          │  0x00007ff4a12238e7: add     $0x10,%rdi
          │  0x00007ff4a12238eb: shr     $0x3,%rcx
          │  0x00007ff4a12238ef: add     $0xfffffffffffffffe,%rcx
  0.46%   │  0x00007ff4a12238f3: xor     %rax,%rax
          │  0x00007ff4a12238f6: shl     $0x3,%rcx
          │  0x00007ff4a12238fa: rep stosb (%rdi)
  8.69%   │  0x00007ff4a12238fd: mov     %r10,%r11
  0.12%   │  0x00007ff4a1223900: mov     %rbp,%r8
          │  0x00007ff4a1223903: mov     %r11d,0x20(%rbp)
  0.35%   │  0x00007ff4a1223907: mov     %rbp,%r10
          │  0x00007ff4a122390a: shr     $0x9,%r10
          │  0x00007ff4a122390e: movabs  $0x7ff4b6346000,%r11
          │  0x00007ff4a1223918: mov     %r12l,(%r11,%r10)
  0.70%   │  0x00007ff4a122391c: lock addl $0x0,(%rsp)     ;*putfield references
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@43 (line 487)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
 10.43%   │  0x00007ff4a1223921: mov     0x20(%rbp),%r10d  ;*getfield references
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@48 (line 488)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
  0.23%   │  0x00007ff4a1223925: mov     0xc(%r10),%r11d   ;*arraylength
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@51 (line 488)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │                                                ; implicit exception: dispatches to 0x00007ff4a1224081
          │  0x00007ff4a1223929: vcvtsi2ssl %r11d,%xmm1,%xmm1
  0.58%   │  0x00007ff4a122392e: mov     0x28(%rsp),%r10
          │  0x00007ff4a1223933: vmulss  0x14(%r10),%xmm1,%xmm0
          │  0x00007ff4a1223939: vcvttss2si %xmm0,%r10d
  0.70%   │  0x00007ff4a122393d: cmp     $0x80000000,%r10d
         ╭│  0x00007ff4a1223944: jne     0x7ff4a1223956
         ││  0x00007ff4a1223946: sub     $0x8,%rsp
         ││  0x00007ff4a122394a: vmovss  %xmm0,(%rsp)
         ││  0x00007ff4a122394f: callq   0x7ff4a10520a0    ;   {runtime_call}
         ││  0x00007ff4a1223954: pop     %r10
  0.12%  ↘│  0x00007ff4a1223956: mov     %r10d,0x18(%rbp)  ;*synchronization entry
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@-1 (line 171)
          │  0x00007ff4a122395a: mov     0x58(%rsp),%r11
  0.46%   │  0x00007ff4a122395f: mov     0xc(%r11),%r10d   ; implicit exception: dispatches to 0x00007ff4a1224091
          │  0x00007ff4a1223963: mov     0x90(%rsp),%ebp
          │  0x00007ff4a122396a: cmp     %r10d,%ebp
          │  0x00007ff4a122396d: jnb     0x7ff4a1223f2d
          │  0x00007ff4a1223973: lea     0x10(%r11,%rbp,4),%r9  ;*aastore
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@144 (line 184)
  0.46%   │  0x00007ff4a1223978: mov     0x28(%rsp),%r10
          │  0x00007ff4a122397d: mov     0x1c(%r10),%r11d  ;*getfield segments
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@121 (line 183)
          │  0x00007ff4a1223981: mov     %r9,%r10
          │  0x00007ff4a1223984: incl    %ebp              ;*iinc
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@145 (line 183)
  0.23%   │  0x00007ff4a1223986: shr     $0x9,%r10
          │  0x00007ff4a122398a: movabs  $0x7ff4b6346000,%rcx
          │  0x00007ff4a1223994: mov     %r12l,(%rcx,%r10)
          │  0x00007ff4a1223998: mov     %r8d,(%r9)        ; OopMap{r11=NarrowOop [0]=NarrowOop [40]=Oop off=859}
          │                                                ;*goto
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@148 (line 183)
  0.46%   │  0x00007ff4a122399b: test    %eax,0x1753765f(%rip)  ;*goto
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@148 (line 183)
          │                                                ;   {poll}
          │  0x00007ff4a12239a1: mov     0xc(%r11),%r10d   ; implicit exception: dispatches to 0x00007ff4a12240ad
          │  0x00007ff4a12239a5: cmp     %r10d,%ebp
          │  0x00007ff4a12239a8: jnl     0x7ff4a1223bd3    ;*if_icmpge
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@125 (line 183)
          │  0x00007ff4a12239ae: mov     %r11,%r13         ;*getfield segments
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@121 (line 183)
  0.35%   │  0x00007ff4a12239b1: mov     0x8(%rsp),%r8d
          │  0x00007ff4a12239b6: mov     (%rsp),%edi
  3.01%   │  0x00007ff4a12239b9: mov     0x18(%rsp),%r14
          │  0x00007ff4a12239be: mov     0x20(%rsp),%r11
          │  0x00007ff4a12239c3: mov     0x30(%rsp),%r9
          │  0x00007ff4a12239c8: mov     0x38(%rsp),%rsi   ;*aload_0
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@128 (line 184)
  0.46%   │  0x00007ff4a12239cd: mov     0x60(%r15),%rbx
          │  0x00007ff4a12239d1: mov     %rbx,%r10
          │  0x00007ff4a12239d4: add     $0x28,%r10
          │  0x00007ff4a12239d8: cmp     0x70(%r15),%r10
          │  0x00007ff4a12239dc: jnb     0x7ff4a1223be2
  0.70%   │  0x00007ff4a12239e2: mov     %r10,0x60(%r15)
          │  0x00007ff4a12239e6: prefetchnta 0x100(%r10)
          │  0x00007ff4a12239ee: mov     0xa8(%r11),%r10
          │  0x00007ff4a12239f5: mov     %r10,(%rbx)
  0.46%   │  0x00007ff4a12239f8: movl    $0x2001959f,0x8(%rbx)  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$Segment&apos;)}
          │  0x00007ff4a12239ff: mov     %r12d,0xc(%rbx)
  0.12%   │  0x00007ff4a1223a03: mov     %r12,0x10(%rbx)
          │  0x00007ff4a1223a07: mov     %r12,0x18(%rbx)
  0.58%   │  0x00007ff4a1223a0b: mov     %r12d,0x20(%rbx)
          │  0x00007ff4a1223a0f: mov     %edi,0x24(%rbx)   ;*new  ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@134 (line 184)
          │  0x00007ff4a1223a12: mov     0x60(%r15),%rax
  0.12%   │  0x00007ff4a1223a16: mov     %rax,%r10
  0.35%   │  0x00007ff4a1223a19: add     $0x20,%r10
          │  0x00007ff4a1223a1d: cmp     0x70(%r15),%r10
          │  0x00007ff4a1223a21: jnb     0x7ff4a1223c68
          │  0x00007ff4a1223a27: mov     %r10,0x60(%r15)
          │  0x00007ff4a1223a2b: prefetchnta 0x100(%r10)
  0.12%   │  0x00007ff4a1223a33: mov     0xa8(%r14),%r10
          │  0x00007ff4a1223a3a: mov     %r10,(%rax)
          │  0x00007ff4a1223a3d: movl    $0x2001833d,0x8(%rax)  ;   {metadata(&apos;java/util/concurrent/locks/ReentrantLock$NonfairSync&apos;)}
  0.23%   │  0x00007ff4a1223a44: mov     %r12d,0xc(%rax)
  0.23%   │  0x00007ff4a1223a48: mov     %r12,0x10(%rax)
          │  0x00007ff4a1223a4c: mov     %r12,0x18(%rax)   ;*new  ; - java.util.concurrent.locks.ReentrantLock::&lt;init&gt;@5 (line 257)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@6 (line 484)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223a50: mov     %rbx,%rcx
          │  0x00007ff4a1223a53: mov     %rax,%r10
  0.70%   │  0x00007ff4a1223a56: mov     %r10d,0xc(%rbx)
  0.12%   │  0x00007ff4a1223a5a: shr     $0x9,%rcx
  0.12%   │  0x00007ff4a1223a5e: movabs  $0x7ff4b6346000,%r10
          │  0x00007ff4a1223a68: mov     %r12l,(%r10,%rcx)
  0.46%   │  0x00007ff4a1223a6c: mov     %r12d,0x14(%rbx)
          │  0x00007ff4a1223a70: lock addl $0x0,(%rsp)     ;*putfield count
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@11 (line 476)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
 16.57%   │  0x00007ff4a1223a75: mov     0x60(%r15),%rdx
  0.12%   │  0x00007ff4a1223a79: mov     %rdx,%r10
          │  0x00007ff4a1223a7c: add     $0x18,%r10
  0.35%   │  0x00007ff4a1223a80: cmp     0x70(%r15),%r10
          │  0x00007ff4a1223a84: jnb     0x7ff4a1223cf6
          │  0x00007ff4a1223a8a: mov     %r10,0x60(%r15)
          │  0x00007ff4a1223a8e: prefetchnta 0x100(%r10)
          │  0x00007ff4a1223a96: mov     0xa8(%rsi),%r10
  0.70%   │  0x00007ff4a1223a9d: mov     %r10,(%rdx)
          │  0x00007ff4a1223aa0: movl    $0x200196b2,0x8(%rdx)  ;   {metadata(&apos;org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager&apos;)}
          │  0x00007ff4a1223aa7: mov     %r12d,0xc(%rdx)
          │  0x00007ff4a1223aab: mov     %r12d,0x14(%rdx)
  0.70%   │  0x00007ff4a1223aaf: mov     %r13,0x58(%rsp)
          │  0x00007ff4a1223ab4: mov     %ebp,0x90(%rsp)
          │  0x00007ff4a1223abb: mov     %edi,0x10(%rdx)   ;*new  ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@0 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223abe: mov     0x60(%r15),%rbp
  0.81%   │  0x00007ff4a1223ac2: mov     %rbp,%r10
          │  0x00007ff4a1223ac5: add     $0x20,%r10
          │  0x00007ff4a1223ac9: cmp     0x70(%r15),%r10
          │  0x00007ff4a1223acd: jnb     0x7ff4a1223d87
          │  0x00007ff4a1223ad3: mov     %r10,0x60(%r15)
  0.35%   │  0x00007ff4a1223ad7: prefetchnta 0x100(%r10)
          │  0x00007ff4a1223adf: mov     0xa8(%r9),%r10
          │  0x00007ff4a1223ae6: mov     %r10,0x0(%rbp)
          │  0x00007ff4a1223aea: movl    $0x20000d06,0x8(%rbp)  ;   {metadata(&apos;java/lang/ref/ReferenceQueue&apos;)}
  0.70%   │  0x00007ff4a1223af1: mov     %r12d,0xc(%rbp)
          │  0x00007ff4a1223af5: mov     %r12,0x10(%rbp)
          │  0x00007ff4a1223af9: mov     %r12,0x18(%rbp)   ;*new  ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@10 (line 984)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223afd: mov     0x60(%r15),%rax
  0.58%   │  0x00007ff4a1223b01: mov     %rax,%r10
          │  0x00007ff4a1223b04: add     $0x10,%r10
          │  0x00007ff4a1223b08: cmp     0x70(%r15),%r10
          │  0x00007ff4a1223b0c: jnb     0x7ff4a1223e1d
          │  0x00007ff4a1223b12: mov     %r10,0x60(%r15)
  0.23%   │  0x00007ff4a1223b16: prefetchnta 0x100(%r10)
          │  0x00007ff4a1223b1e: mov     0x10(%rsp),%r10
          │  0x00007ff4a1223b23: mov     0xa8(%r10),%r10
          │  0x00007ff4a1223b2a: mov     %r10,(%rax)
  0.35%   │  0x00007ff4a1223b2d: movl    $0x200034f1,0x8(%rax)  ;   {metadata(&apos;java/lang/ref/ReferenceQueue$Lock&apos;)}
          │  0x00007ff4a1223b34: mov     %r12d,0xc(%rax)   ;*new  ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@5 (line 55)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223b38: mov     %rbp,%r10         ;*putfield queue
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@17 (line 984)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223b3b: mov     %rax,%rcx
  0.46%   │  0x00007ff4a1223b3e: mov     %ecx,0xc(%rbp)    ;*putfield lock
          │                                                ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@13 (line 55)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223b41: mov     %rbp,%rax
          │  0x00007ff4a1223b44: mov     %rdx,%rcx         ;*putfield referenceManager
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@19 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223b47: shr     $0x9,%rax
  0.46%   │  0x00007ff4a1223b4b: movabs  $0x7ff4b6346000,%r13
          │  0x00007ff4a1223b55: mov     %r12l,0x0(%r13,%rax)
          │  0x00007ff4a1223b5a: mov     %r12d,0x18(%rbp)
          │  0x00007ff4a1223b5e: lock addl $0x0,(%rsp)     ;*putfield head
          │                                                ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@18 (line 56)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
 15.64%   │  0x00007ff4a1223b63: mov     %r10d,0xc(%rdx)   ;*putfield queue
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@17 (line 984)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
  0.12%   │  0x00007ff4a1223b67: mov     %r12,0x10(%rbp)   ;*putfield queueLength
          │                                                ; - java.lang.ref.ReferenceQueue::&lt;init&gt;@23 (line 57)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::&lt;init&gt;@14 (line 984)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@5 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223b6b: mov     %rdx,%r10
  0.70%   │  0x00007ff4a1223b6e: shr     $0x9,%r10
          │  0x00007ff4a1223b72: movabs  $0x7ff4b6346000,%rdx
          │  0x00007ff4a1223b7c: mov     %r12l,(%rdx,%r10)  ;*synchronization entry
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::createReferenceManager@-1 (line 207)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@16 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
          │  0x00007ff4a1223b80: mov     %ecx,0x1c(%rbx)
  0.46%   │  0x00007ff4a1223b83: mov     %rbx,%r10
          │  0x00007ff4a1223b86: shr     $0x9,%r10
          │  0x00007ff4a1223b8a: movabs  $0x7ff4b6346000,%rcx
          │  0x00007ff4a1223b94: mov     %r12l,(%rcx,%r10)  ;*putfield referenceManager
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@19 (line 485)
          │                                                ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
  0.46%   │  0x00007ff4a1223b98: cmp     $0x1,%r8d
          ╰  0x00007ff4a1223b9c: jle     0x7ff4a1223850    ;*goto
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::calculateShift@21 (line 437)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@27 (line 486)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;@141 (line 184)
             0x00007ff4a1223ba2: mov     $0x1,%r10d
             0x00007ff4a1223ba8: xor     %ecx,%ecx         ;*iload_3
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap::calculateShift@9 (line 435)
                                                           ; - org.springframework.util.ConcurrentReferenceHashMap$Segment::&lt;init&gt;@27 (line 486)
....................................................................................................
 76.01%  <total for region 1>

....[Hottest Regions]...............................................................................
 76.01%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (820 bytes) 
  3.48%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  1.51%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (57 bytes) 
  1.16%   [kernel.kallsyms]  syscall_exit_to_user_mode (0 bytes) 
  0.70%   [kernel.kallsyms]  zap_pte_range.isra.0 (17 bytes) 
  0.70%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (31 bytes) 
  0.58%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 (33 bytes) 
  0.35%   [kernel.kallsyms]  futex_wait_queue_me (0 bytes) 
  0.35%   [kernel.kallsyms]  release_pages (24 bytes) 
  0.35%   [kernel.kallsyms]  page_remove_rmap (17 bytes) 
  0.35%           libjvm.so  SpinPause (0 bytes) 
  0.35%        libc-2.31.so  malloc_consolidate (24 bytes) 
  0.35%        libc-2.31.so  _int_free (12 bytes) 
  0.23%   [kernel.kallsyms]  native_flush_tlb_one_user (0 bytes) 
  0.23%   [kernel.kallsyms]  free_pcppages_bulk (0 bytes) 
  0.23%   [kernel.kallsyms]  free_pages_and_swap_cache (3 bytes) 
  0.23%   [kernel.kallsyms]  uncharge_page (0 bytes) 
  0.23%   [kernel.kallsyms]  entry_SYSCALL_64 (9 bytes) 
  0.23%   [kernel.kallsyms]  syscall_return_via_sysret (1 bytes) 
  0.23%    libfcml.so.0.0.0  fcml_fn_dt_dts_tree_element_free (16 bytes) 
 12.05%  <...other 99 warm regions...>
....................................................................................................
 99.88%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 78.91%         C2, level 4  org.springframework.util.ConcurrentReferenceHashMap::&lt;init&gt;, version 529 
  3.48%   [kernel.kallsyms]  native_write_msr 
  1.16%   [kernel.kallsyms]  syscall_exit_to_user_mode 
  0.93%   [kernel.kallsyms]  zap_pte_range.isra.0 
  0.81%        libc-2.31.so  _int_free 
  0.70%        libc-2.31.so  malloc 
  0.70%   [kernel.kallsyms]  free_pcppages_bulk 
  0.70%        libc-2.31.so  malloc_consolidate 
  0.58%        libc-2.31.so  _int_malloc 
  0.46%   [kernel.kallsyms]  page_remove_rmap 
  0.46%   [kernel.kallsyms]  release_pages 
  0.35%           libjvm.so  SpinPause 
  0.35%   [kernel.kallsyms]  futex_wait_queue_me 
  0.35%   [kernel.kallsyms]  uncharge_page 
  0.23%    libfcml.so.0.0.0  fcml_fn_dt_dts_tree_element_free 
  0.23%    libfcml.so.0.0.0  fcml_ifn_dt_dts_handle_next_opcode_byte 
  0.23%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.23%   [kernel.kallsyms]  native_flush_tlb_one_user 
  0.23%   [kernel.kallsyms]  free_pages_and_swap_cache 
  0.23%    libfcml.so.0.0.0  fcml_fn_env_is_alpha 
  8.57%  <...other 69 warm methods...>
....................................................................................................
 99.88%  <totals>

....[Distribution by Source]........................................................................
 79.03%         C2, level 4
 12.05%   [kernel.kallsyms]
  3.59%        libc-2.31.so
  2.78%           libjvm.so
  2.09%    libfcml.so.0.0.0
  0.23%         interpreter
  0.12%        runtime stub
....................................................................................................
 99.88%  <totals>

WARNING: The perf event count is suspiciously low (863). The performance data might be
inaccurate or misleading. Try to do the profiling again, or tune up the sampling frequency.
With some profilers on Mac OS X, System Integrity Protection (SIP) may prevent profiling.
In such case, temporarily disabling SIP with 'csrutil disable' might help.


# Run complete. Total time: 00:00:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       Mode  Cnt    Score   Error  Units
CRHMBenchmark.instantiate       avgt       642.351          ns/op
CRHMBenchmark.instantiate:·asm  avgt           NaN            ---
